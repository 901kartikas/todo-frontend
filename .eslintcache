[{"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\index.js":"1","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\App.js":"2","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\coba.js":"4","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\AddTodo.js":"5","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\heading.js":"6","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\SignIn.js":"7","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\ShowTodo.js":"8","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\modalEdit.js":"9"},{"size":565,"mtime":1612363150116,"results":"10","hashOfConfig":"11"},{"size":514,"mtime":1612368289910,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1612318869847,"results":"13","hashOfConfig":"11"},{"size":125,"mtime":1612368290126,"results":"14","hashOfConfig":"11"},{"size":2831,"mtime":1612368289940,"results":"15","hashOfConfig":"11"},{"size":1325,"mtime":1612323360927,"results":"16","hashOfConfig":"11"},{"size":2998,"mtime":1612239116620,"results":"17","hashOfConfig":"11"},{"size":3025,"mtime":1612368289989,"results":"18","hashOfConfig":"11"},{"size":1490,"mtime":1612363150096,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1wtnl9q",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\index.js",[],["42","43"],"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\App.js",["44"],"import './App.css';\r\nimport './layout.css'\r\nimport {Container } from '@material-ui/core'\r\nimport Heading from './Component/heading'\r\nimport AddTodo from './Component/AddTodo'\r\nimport SignIn from './Component/SignIn'\r\nimport Coba from './Component/coba'\r\nimport React from 'react'\r\n\r\nexport default function App (){\r\n\r\n  \r\n  return (\r\n\r\n    <div className=\"App\">\r\n       <Heading/>\r\n      <Container maxWidth=\"lg\"className=\"layout\" >\r\n        <AddTodo/>\r\n      </Container>\r\n      <Coba/>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\coba.js",[],"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\AddTodo.js",[],"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\heading.js",[],"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\SignIn.js",[],"C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\ShowTodo.js",["45","46","47","48","49"],"import React , {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Paper, Grid, Typography,Button, IconButton,  } from '@material-ui/core';\r\nimport { ListGroup, ListGroupItem, Modal,  ModalHeader, ModalBody, ModalFooter, Input, Collapse, CardBody, Card } from 'reactstrap';\r\nimport { MoreHoriz } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles({\r\n  page:{\r\n    flexDirection:'column'\r\n  }, \r\n  menu:{\r\n    justifyContent:\"flex-end\"\r\n  }, \r\n  typo:{\r\n    fontSize:\"25px\",\r\n  },\r\n   text: {\r\n    marginLeft: \"15%\",\r\n  },\r\n  btnCheck:{\r\n    marginRight: \"5%\"\r\n  }\r\n})\r\n\r\n\r\nexport default function SimplePaper(props) {\r\n  const classes = useStyles();\r\n  const {\r\n    className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n  });\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle1 = () => setIsOpen(!isOpen);\r\n\r\n  \r\n  \r\n  const oke = [gilad].filter((v) => v).length !== 2;\r\n  return (\r\n    <div   >\r\n      <Paper className={classes.page}  elevation={0}>\r\n           <Grid item xs={10}>\r\n           <Typography className={classes.typo}> Judul TODO\r\n            {/* Button untuk modal */}\r\n            <IconButton  className={classes.menu} onClick={toggle}><MoreHoriz/></IconButton>\r\n            </Typography>\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n              <ModalHeader toggle={toggle}>Modal title</ModalHeader>\r\n              <ModalBody>\r\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\r\n              </ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={toggle}>Do Something</Button>\r\n                <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n           <ListGroup>\r\n            <ListGroupItem><Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\" className={classes.btnCheck} />\r\n              <Typography className={classes.text}>\r\n                Cras justo odio\r\n                </Typography>\r\n            </ListGroupItem>\r\n            <ListGroupItem>\r\n               <Input type=\"text\" name=\"add item\" id=\"exampletext\" placeholder=\"add item\" style={{border: 0}} onClick={toggle1} />\r\n               <Collapse isOpen={isOpen}>\r\n                <Card>\r\n                  <Button>Save</Button>\r\n                </Card>\r\n              </Collapse>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n           </Grid>\r\n           </Paper>\r\n   \r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\umars\\OneDrive\\Dokumen\\GitHub\\todo-frontend\\src\\Component\\modalEdit.js",["50"],"import React, { useState } from 'react';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport {IconButton,  Button,  } from '@material-ui/core';\r\nimport MoreHoriz from   '@material-ui/icons/MoreHoriz';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nconst ModalExample = (props) => {\r\n  const {\r\n  className\r\n  } = props;\r\n\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (\r\n    <div>\r\n      <IconButton  onClick={toggle}> <MoreHoriz/></IconButton>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>Edit</ModalHeader>\r\n        <ModalBody>\r\n         <Form>\r\n          <FormGroup>\r\n            <Label for=\"exampleSelect\">Change Title</Label>\r\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\">\r\n              <option>1</option>\r\n              <option>2</option>\r\n              </Input>\r\n          </FormGroup>\r\n          <FormGroup style={{flexDirection:'row', border: '1px'}}>\r\n            <p>Delete Todo List</p>\r\n            <IconButton><DeleteIcon/></IconButton>\r\n          </FormGroup>\r\n         </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>Save</Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalExample;",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":14},{"ruleId":"55","severity":1,"message":"59","line":4,"column":98,"nodeType":"57","messageId":"58","endLine":4,"endColumn":106},{"ruleId":"55","severity":1,"message":"60","line":36,"column":10,"nodeType":"57","messageId":"58","endLine":36,"endColumn":15},{"ruleId":"55","severity":1,"message":"61","line":36,"column":17,"nodeType":"57","messageId":"58","endLine":36,"endColumn":25},{"ruleId":"55","severity":1,"message":"62","line":46,"column":9,"nodeType":"57","messageId":"58","endLine":46,"endColumn":12},{"ruleId":"63","severity":2,"message":"64","line":46,"column":16,"nodeType":"57","messageId":"65","endLine":46,"endColumn":21},{"ruleId":"55","severity":1,"message":"66","line":2,"column":84,"nodeType":"57","messageId":"58","endLine":2,"endColumn":92},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'SignIn' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'oke' is assigned a value but never used.","no-undef","'gilad' is not defined.","undef","'FormText' is defined but never used.","no-global-assign","no-unsafe-negation"]